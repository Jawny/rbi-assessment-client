[{"/Users/johnny/Documents/projects/rbi-assessment-client/src/App.js":"1","/Users/johnny/Documents/projects/rbi-assessment-client/src/components/PlayerScore.js":"2","/Users/johnny/Documents/projects/rbi-assessment-client/src/utils/CheckWinner.js":"3","/Users/johnny/Documents/projects/rbi-assessment-client/src/utils/CalculateScore.js":"4","/Users/johnny/Documents/projects/rbi-assessment-client/src/utils/index.js":"5"},{"size":3248,"mtime":1610013607135,"results":"6","hashOfConfig":"7"},{"size":374,"mtime":1609996707174,"results":"8","hashOfConfig":"7"},{"size":434,"mtime":1609999776736,"results":"9","hashOfConfig":"7"},{"size":176,"mtime":1609984487928,"results":"10","hashOfConfig":"7"},{"size":137,"mtime":1609984487928,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"b9nlxu",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/johnny/Documents/projects/rbi-assessment-client/src/App.js",["23"],"import React, { useState, useEffect } from \"react\";\nimport { PlayerScore } from \"./components/PlayerScore\";\nimport { CalculateScore, CheckWinner } from \"./utils/index\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nconst App = () => {\n  const [scores, setScores] = useState([0, 0]);\n  const [gameId, setGameId] = useState(\"\");\n  const [winner, setWinner] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n\n  const updateUrl = \"http://localhost:8000/update\";\n  const readUrl = \"http://localhost:8000/\";\n  const createUrl = \"http://localhost:8000/create\";\n\n  // Initialize the game\n  useEffect(() => {\n    getGameData();\n  }, []);\n\n  // Check if the game is over whenever scores are updated\n  useEffect(() => {\n    handleIfGameOver(scores);\n  }, [scores]);\n\n  // Get game data from database, if no game data exists then create a game with scores [0,0]\n  const getGameData = async () => {\n    const data = await axios.get(readUrl);\n    console.log(\"gamedata\", data);\n    // Check if the database is empty, if true then create a game with scores [0,0]\n    // Else get game[0]'s id and setGameId.\n    if (data.data.length < 1) {\n      const newGameId = await axios.post(createUrl);\n      setGameId(newGameId.data[\"_id\"]);\n    } else {\n      setGameId(data.data[0][\"_id\"]);\n      setScores(data.data[0].scores);\n    }\n  };\n\n  // Check if game is over setGameOver to true, and setWinner to winning player\n  const handleIfGameOver = (scores) => {\n    // Check if either player has won and return 0 for player1 and 1 for player2\n    const gameWinner = CheckWinner(scores);\n    // Check if gameWinner has been set, null = no winner\n    if (gameWinner != null) {\n      setGameOver(true);\n      gameWinner ? setWinner(\"Player2\") : setWinner(\"Player1\");\n    }\n  };\n\n  // Calculate new score based on index,\n  // Update Scores state and make post request to update database score\n  // Check if game is over\n  const handleScore = async (index) => {\n    // Calculate new score from index and setScores state with new scores\n    // index 0 = score1 index 1 = score2\n    const newScore = CalculateScore(scores[index]);\n    const newScores = index ? [scores[0], newScore] : [newScore, scores[1]];\n    setScores(newScores);\n\n    // Update scores in the database\n    await axios\n      .put(updateUrl, { scores: newScores, id: gameId })\n      .then((res) => {\n        console.log(res);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  // Reset database scores to [0,0], set gameOver state to false and call getGameData to rerender DOM\n  const handleResetGame = async () => {\n    await axios.put(updateUrl, { scores: [0, 0], id: gameId });\n    await setWinner(\"\");\n    await setGameOver(false);\n    await getGameData();\n  };\n\n  return (\n    <div>\n      <PlayerScore\n        player=\"player1\"\n        scores={scores}\n        index={0}\n        handleScore={handleScore}\n        gameOver={gameOver}\n      />\n      <PlayerScore\n        player=\"player2\"\n        scores={scores}\n        index={1}\n        handleScore={handleScore}\n        gameOver={gameOver}\n      />\n      {winner != \"\" ? <h1>{winner} has won!</h1> : <></>}\n      <button onClick={handleResetGame}>RESET GAME</button>\n    </div>\n  );\n};\n\nexport default App;\n","/Users/johnny/Documents/projects/rbi-assessment-client/src/components/PlayerScore.js",[],"/Users/johnny/Documents/projects/rbi-assessment-client/src/utils/CheckWinner.js",["24","25","26","27","28","29","30"],"/Users/johnny/Documents/projects/rbi-assessment-client/src/utils/CalculateScore.js",[],"/Users/johnny/Documents/projects/rbi-assessment-client/src/utils/index.js",[],{"ruleId":"31","severity":1,"message":"32","line":98,"column":15,"nodeType":"33","messageId":"34","endLine":98,"endColumn":17},{"ruleId":"35","severity":1,"message":"36","line":6,"column":7,"nodeType":"37","messageId":"38","endLine":6,"endColumn":13},{"ruleId":"35","severity":1,"message":"36","line":9,"column":7,"nodeType":"37","messageId":"38","endLine":9,"endColumn":13},{"ruleId":"35","severity":1,"message":"36","line":12,"column":7,"nodeType":"37","messageId":"38","endLine":12,"endColumn":13},{"ruleId":"35","severity":1,"message":"36","line":15,"column":7,"nodeType":"37","messageId":"38","endLine":15,"endColumn":13},{"ruleId":"35","severity":1,"message":"36","line":18,"column":7,"nodeType":"37","messageId":"38","endLine":18,"endColumn":13},{"ruleId":"35","severity":1,"message":"36","line":21,"column":7,"nodeType":"37","messageId":"38","endLine":21,"endColumn":13},{"ruleId":"35","severity":1,"message":"36","line":24,"column":7,"nodeType":"37","messageId":"38","endLine":24,"endColumn":13},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unreachable","Unreachable code.","BreakStatement","unreachableCode"]nodeType":"38","messageId":"39","endLine":18,"endColumn":13},{"ruleId":"36","severity":1,"message":"37","line":21,"column":7,"nodeType":"38","messageId":"39","endLine":21,"endColumn":13},{"ruleId":"36","severity":1,"message":"37","line":24,"column":7,"nodeType":"38","messageId":"39","endLine":24,"endColumn":13},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unreachable","Unreachable code.","BreakStatement","unreachableCode"]